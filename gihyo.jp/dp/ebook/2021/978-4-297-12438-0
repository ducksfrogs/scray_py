<!DOCTYPE HTML>
<html lang="ja" class="pc">
<head>
  <meta charset="UTF-8">
  <title>プロを目指す人のためのRuby入門［改訂2版］ 言語仕様からテスト駆動開発・デバッグ技法まで | Gihyo Digital Publishing … 技術評論社の電子書籍</title>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta http-equiv="Content-Script-Type" content="application/javascript"/>
  <meta name="description" content="本書は，プログラミング言語Rubyの言語仕様や開発の現場で役立つRubyの知識を説明した本です。豊富なサンプルコードで文法を学び，例題でプログラミングの流れを体験できます。第1版（2017年11月発行）は，初心者の目線にたった丁寧な解説が好評で多くのRuby初学者に愛読され，いまやRuby入門書の定番とも言える存在です。2020年末のRuby 3.0のリリースに伴い，全章にわたって記述内容を見直し，Ruby 3.0までの変更点や新機能に合わせて加筆・修正を行いました。また，第1版にて読者から「難しい，わかりづらい」という声の多かったトピックの説明を改善するなど，より初心者に親切な内容に刷新しています。"/>
  <meta name="keywords" content="伊藤淳一電子書籍,電子出版,EPUB,PDF,技術評論社"/>
  <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1"/>
  <meta name="apple-mobile-web-app-capable" content="yes"/>
  <meta name="format-detection" content="telephone=no"/>
  <link rel="related" href="http://gihyo.jp/dp/catalogs.opds" type="application/atom+xml;profile=opds-catalog" title="Gihyo Digital Publishing OPDS Catalog"/>
  <link rel="shortcut icon" href="/assets/templates/gdp/favicon.ico" type="image/vnd.microsoft.icon"/>
  <link rel="apple-touch-icon-precomposed" href="/dp/assets/gdp-icon.png"/>
  <!--[if lt IE 9]>
    <script>var msie=8;</script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="/dp/assets/js/html5shiv.min.js"></script>
    <script src="//css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>
    <script src="/dp/assets/js/selectivizr-min.js"></script>
    <script src="/dp/assets/js/addEventListener.min.js"></script>
    <script src="/dp/assets/js/textContent.min.js"></script>
  <![endif]-->
  <!--[if lte IE 9]>
    <script src="/dp/assets/js/classList.min.js" defer></script>
  <![endif]-->
  <link rel="stylesheet" href="/dp/assets/style/store0902.css" type="text/css" media="all"/>
  <script src="/dp/assets/js/gdpFunction0425.min.js" defer></script>
  <meta name="twitter:card" content="summary_large_image"/>
  <meta name="twitter:site" content="@gihyoDP"/>
  <meta property="og:title" content="プロを目指す人のためのRuby入門［改訂2版］ 言語仕様からテスト駆動開発・デバッグ技法まで | Gihyo Digital Publishing … 技術評論社の電子書籍"/>
  <meta property="og:type" content="website"/>
  <meta property="og:description" content="本書は，プログラミング言語Rubyの言語仕様や開発の現場で役立つRubyの知識を説明した本です。豊富なサンプルコードで文法を学び，例題でプログラミングの流れを体験できます。第1版（2017年11月発行）は，初心者の目線にたった丁寧な解説が好評で多くのRuby初学者に愛読され，いまやRuby入門書の定番とも言える存在です。2020年末のRuby 3.0のリリースに伴い，全章にわたって記述内容を見直し，Ruby 3.0までの変更点や新機能に合わせて加筆・修正を行いました。また，第1版にて読者から「難しい，わかりづらい」という声の多かったトピックの説明を改善するなど，より初心者に親切な内容に刷新しています。"/>
  <meta property="og:url" content="https://gihyo.jp/dp/ebook/2021/978-4-297-12438-0"/>
  <meta property="og:image" content="https://image.gihyo.co.jp/assets/images/ogp/2021/978-4-297-12438-0.jpg"/>
  <meta property="og:site_name" content="Gihyo Digital Publishing"/>
  <meta property="fb:app_id" content="185201618169441"/>
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-DL906V3TN7"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'G-DL906V3TN7');
  </script>
</head>
<body itemscope="itemscope" itemtype="http://schema.org/WebPage" class="page-home">
  <header id="header" itemscope="itemscope" itemtype="http://schema.org/WPHeader">
    <h1 class="home-title">Gihyo Digital Publishing</h1>
    <h2 class="home-subtitle">技術評論社の電子書籍サイト</h2>
    <nav id="headerFunction">
      <div id="login">
        <a href="#login" title="ログイン・会員登録">ログイン</a>
      </div>
      <div id="cart">
        <a href="/dp/cart" title="カートは空です">カート</a>
      </div>
    </nav>
  </header>
  <div id="main">
    <noscript><div id="noscript">
      <p>本サイトではJavaScriptを使用しております。JavaScriptが無効な状態ではご利用いただけません。</p>
    </div></noscript>

<div id="overlayWindow" class="book-infor" itemscope itemtype="http://schema.org/Book" typeof="product:Product" xmlns:product="http://search.yahoo.com/searchmonkey/product/" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:media="http://search.yahoo.com/searchmonkey/media/" xmlns:xsd="http://www.w3.org/2001/XMLSchema#" xmlns:currency="http://search.yahoo.com/searchmonkey-datatype/currency/" style="display:block;opacity:1">
  <header id="overlayHeader">
    <h1>書籍概要</h1>
    <nav id="overlayFunction">
      <p id="close"><a href="/dp/genre/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%83%BB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA" title="閉じる">閉じる</a></p>
      <ul id="jump">
        <li id="detailRef"><a href="#title" title="概要を見る">概要</a></li>
        <li id="contentRef"><a href="#content" title="目次を見る">目次</a></li>
        <li id="supportRef"><a href="#support" title="サポート情報を見る">サポート</a></li>
      </ul>
    </nav>
  </header>
  <div id="bookInforMain">
  <hgroup id="title">
<h2 id="bookSeries"><a href="/dp/series/Software%20Design%20plus">Software Design plus</a></h2>
    <h1 id="bookTitle" property="rdfs:label" itemprop="name">プロを目指す人のための<wbr>Ruby<wbr>入門<wbr>［改訂<wbr>2<wbr>版］ 言語仕様からテスト駆動開発・<wbr>デバッグ技法まで</h1>
  </hgroup>
  <aside id="bookCover" rel="rdfs:seeAlso media:image"><img src="https://image.gihyo.co.jp/assets/images/gdp/2021/978-4-297-12438-0.jpg" alt="プロを目指す人のためのRuby入門［改訂2版］ 言語仕様からテスト駆動開発・デバッグ技法まで"/></aside>
  <dl id="publicationData" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
    <dt>著者</dt>
    <dd itemprop="author">伊藤淳一　著</dd>
    <dt>発売日</dt>
    <dd><time datetime="2021-11-29">2021年11月29日</time></dd>
    <dt>更新日</dt>
    <dd><time datetime="2021-11-30">2021年11月30日</time></dd>
  </dl>
  <aside>
    <ul class="information">
      <li>本書は，<a href="https://gihyo.jp/book/2021/978-4-297-12437-3" target="_blank">2021年12月2日に発売された書籍</a>の電子版です。</li>
      <li class="need-login">ご購入には会員登録・ログインが必要です</li>
      <li class="corporate"><a href="/dp/help/buy/bulkpurchase">学校・法人等団体でのご利用について</a></li>
    </ul>
    <dl id="productPrice">
<dt><span class="name">EPUB/PDFセット</span><span class="buy">2,980円 <a id="pid403401" href="#cartAdd" title="カートに入れる">カートに入れる<div class="option" title="購入オプション">▼<ul><li title="通常購入">自分用に購入する</li><li class="gift" title="ギフトコードを購入">ギフトとして購入する</li></ul></div></a></span></dt><dd><span class="page"><span itemprop="numberOfPages">568</span>ページ相当</span><span class="pdf">PDF</span> <span class="epub">EPUB：リフロー</span> </dd>

    </dl>
  </aside>
  <aside id="social">
    <ul>
      <li class="twitter"><a href="https://twitter.com/search?q=https://gihyo.jp/dp/ebook/2021/978-4-297-12438-0" class="twitter--list">リスト</a><a href="http://twitter.com/share" class="twitter-share-button" data-url="https://gihyo.jp/dp/ebook/2021/978-4-297-12438-0" data-text="プロを目指す人のためのRuby入門［改訂2版］ 言語仕様からテスト駆動開発・デバッグ技法まで #gihyoDP" data-count="none" data-lang="ja">ツイート</a></li>
      <li class="facebook"><div class="fb-like" data-href="https://gihyo.jp/dp/ebook/2021/978-4-297-12438-0" data-send="false" data-layout="box_count" data-width="450" data-show-faces="false" data-share="true"></div></li>
      <li class="hatena"><a href="http://b.hatena.ne.jp/entry/https://gihyo.jp/dp/ebook/2021/978-4-297-12438-0" class="hatena-bookmark-button" data-hatena-bookmark-layout="vertical-balloon" data-hatena-bookmark-lang="ja" title="このエントリーをはてなブックマークに追加"><img src="//b.hatena.ne.jp/images/entry-button/button-only@2x.png" alt="このエントリーをはてなブックマークに追加" width="20" height="20" style="border: none;" /></a></li>
    </ul>
  </aside>
  <div id="productDetail">
    <section id="detail">
      <h2>概要</h2>
<p>本書は，<wbr/>プログラミング言語Rubyの言語仕様や開発の現場で役立つRubyの知識を説明した本です。豊富なサンプルコードで文法を学び，<wbr/>例題でプログラミングの流れを体験できます。第1版（2017年11月発行）は，<wbr/>初心者の目線にたった丁寧な解説が好評で多くのRuby初学者に愛読され，<wbr/>いまやRuby入門書の定番とも言える存在です。2020年末のRuby 3.0のリリースに伴い，<wbr/>全章にわたって記述内容を見直し，<wbr/>Ruby 3.0までの変更点や新機能に合わせて加筆・<wbr/>修正を行いました。また，<wbr/>第1版にて読者から「難しい，<wbr/>わかりづらい」という声の多かったトピックの説明を改善するなど，<wbr/>より初心者に親切な内容に刷新しています。</p><h3>こんな方におすすめ</h3>
<ul><li>Rubyのプログラミングを学びたい人</li><li>Rubyのテスト駆動開発やデバッグ技法を学びたい人</li><li>Railsを学ぶにあたりまずはRubyを学びたい人</li><li>仕事でRubyを使っている人，<wbr/>仕事でRubyを使いたい人</li></ul>
<h3>本書のサンプル</h3>
<p>本書の一部ページを，<wbr/>PDFで確認することができます。</p>
<ul class="toc">
<li class="linkPDF"><a href="https://image.gihyo.co.jp/assets//files/book/2021/978-4-297-12437-3/download/RubyPro_v2_sample_maegaki.pdf">本書の刊行に寄せて／<wbr/>まえがき</a></li>
<li class="linkPDF"><a href="https://image.gihyo.co.jp/assets//files/book/2021/978-4-297-12437-3/download/RubyPro_v2_sample_ch5.pdf">第5章の一部</a></li>
</ul><aside class="author"><h3>伊藤淳一（いとうじゅんいち）</h3><p>1977年生まれ。大阪府豊中市出身，<wbr/>兵庫県西脇市在住。<br />
株式会社ソニックガーデンのRailsプログラマ，<wbr/>およびプログラミングスクール「フィヨルドブートキャンプ」のメンター。<br />
ブログやQiitaなどで公開したプログラミング関連の記事多数。説明のわかりやすさには定評がある。<br />
訳書（電子書籍）に「Everyday Rails - RSpecによるRailsテスト入門」（Aaron Sumner 著，<wbr/>Leanpub）がある。<br />
趣味はギター。Rubyを書くのと同じぐらいスラスラとギターが弾けるようになるのが夢。<br />
Twitter：<a href="https://twitter.com/jnchito">@jnchito</a><br />
ブログ：<a href="https://blog.jnito.com">https://blog.jnito.com</a>
</p></aside>
    </section>
    <section id="content">
      <h2>目次</h2>
<div id="bookSearch">
<form id="bookSearchForm" action="search" method="post">
  <input type="search" name="query" id="bookSearchText" title="本書内を検索するキーワードを入力" placeholder="本書内のキーワード" required="required" value="">
  <input type="hidden" name="code" value="44321">
  <input type="submit" id="bookSearchSubmit" value="検索" title="検索する">
</form>
</div><h3>第1章　本書を読み進める前に</h3>
<ul class="toc">
<li>1.1　イントロダクション<ul class="toc">
	<li>1.1.1　この章で説明すること</li></ul></li>
<li>1.2　本書の概要<ul class="toc">
	<li>1.2.1　対象となる読者</li>
	<li>1.2.2　本書で説明する内容と説明しない内容</li>
	<li>1.2.3　Railsアプリの開発にも本書は役に立つか？</li>
	<li>1.2.4　本書の特徴と効果的な学習方法</li>
	<li>1.2.5　対象となるRubyのバージョン</li></ul></li>
<li>1.3　Rubyについて<ul class="toc">
	<li>1.3.1　Rubyってどんなプログラミング言語？</li>
	<li>1.3.2　Rubyの処理系</li>
	<li>1.3.3　Rubyのライセンス</li>
	<li>1.3.4　Ruby 3.0について</li></ul></li>
<li>1.4　Rubyのインストール<ul class="toc">
	<li>1.4.1　macOS/Linuxの場合</li>
	<li>1.4.2　Windowsの場合</li>
	<li>1.4.3　その他の方法</li>
	<li>1.4.4　サンプルコードの動作確認環境について</li></ul></li>
<li>1.5　エディタ／IDEについて<ul class="toc">
	<li>1.5.1　エディタやIDEで不可欠な機能や設定</li></ul></li>
<li>1.6　Rubyを動かしてみる<ul class="toc">
	<li>1.6.1　本書のサンプルコードとその表示例について</li>
	<li>1.6.2　ファイルに保存したRubyプログラムを実行する</li></ul></li>
<li>1.7　本書のサンプルコードについて<ul class="toc">
	<li>1.7.1　サンプルコードがうまく動かない場合</li></ul></li>
<li>1.8　Rubyの公式リファレンスについて</li>
<li>1.9　この章のまとめ</li>

</ul>
<h3>第2章　Rubyの基礎を理解する</h3>
<ul class="toc">
<li>2.1　イントロダクション<ul class="toc">
	<li>2.1.1　この章の例題：FizzBuzzプログラム</li>
	<li>2.1.2　FizzBuzzプログラムの実行例</li>
	<li>2.1.3　この章で学ぶこと</li></ul></li>
<li>2.2　Rubyに関する基礎知識<ul class="toc">
	<li>2.2.1　すべてがオブジェクト</li>
	<li>2.2.2　メソッド呼び出し</li>
	<li>2.2.3　文の区切り</li>
	<li>2.2.4　コメント</li>
	<li>2.2.5　識別子と予約語</li>
	<li>2.2.6　空白文字</li>
	<li>2.2.7　リテラル</li>
	<li>2.2.8　変数（ローカル変数）の宣言と代入</li></ul></li>
<li>2.3　文字列<ul class="toc">
	<li>2.3.1　シングルクオートとダブルクオート</li>
	<li>2.3.2　文字列の比較</li></ul></li>
<li>2.4　数値<ul class="toc">
	<li>2.4.1　演算子による値の比較</li>
	<li>2.4.2　演算子の優先順位</li>
	<li>2.4.3　変数に格納された数値の増減</li></ul></li>
<li>2.5　真偽値と条件分岐<ul class="toc">
	<li>2.5.1　Rubyの真偽値</li>
	<li>2.5.2　論理演算子</li>
	<li>2.5.3　if文</li></ul></li>
<li>2.6　メソッドの定義<ul class="toc">
	<li>2.6.1　メソッドの戻り値</li>
	<li>2.6.2　メソッド定義における引数の( )</li></ul></li>
<li>2.7　例題：FizzBuzzプログラムを作成する<ul class="toc">
	<li>2.7.1　作業用のディレクトリとファイルを準備する</li>
	<li>2.7.2　一番簡単なプログラムで動作確認する</li>
	<li>2.7.3　fizz_buzzメソッドを作成する</li></ul></li>
<li>2.8　文字列についてもっと詳しく<ul class="toc">
	<li>2.8.1　文字列はStringクラスのオブジェクト</li>
	<li>2.8.2　%記法で文字列を作る</li>
	<li>2.8.3　ヒアドキュメント（行指向文字列リテラル）</li>
	<li>2.8.4　フォーマットを指定して文字列を作成する</li>
	<li>2.8.5　その他，文字列作成のいろいろ</li>
	<li>2.8.6　文字と文字列の違いはない</li></ul></li>
<li>2.9　数値についてもっと詳しく<ul class="toc">
	<li>2.9.1　基数指示子を用いた整数リテラル</li>
	<li>2.9.2　ビット演算</li>
	<li>2.9.3　指数表現</li>
	<li>2.9.4　数値クラスのあれこれ</li></ul></li>
<li>2.10　真偽値と条件分岐についてもっと詳しく<ul class="toc">
	<li>2.10.1　&&や||の戻り値と評価を終了するタイミング</li>
	<li>2.10.2　優先順位が低いand，or，not</li>
	<li>2.10.3　unless文</li>
	<li>2.10.4　case文</li>
	<li>2.10.5　条件演算子（三項演算子）</li></ul></li>
<li>2.11　メソッド定義についてもっと詳しく<ul class="toc">
	<li>2.11.1　デフォルト値付きの引数</li>
	<li>2.11.2　?で終わるメソッド</li>
	<li>2.11.3　!で終わるメソッド</li>
	<li>2.11.4　エンドレスメソッド定義（1行メソッド定義）</li></ul></li>
<li>2.12　その他の基礎知識<ul class="toc">
	<li>2.12.1　ガベージコレクション（GC）</li>
	<li>2.12.2　エイリアスメソッド</li>
	<li>2.12.3　式（Expression）と文（Statement）</li>
	<li>2.12.4　擬似変数</li>
	<li>2.12.5　参照の概念を理解する</li>
	<li>2.12.6　組み込みライブラリ，標準ライブラリ，gem</li>
	<li>2.12.7　requireとrequire_relative</li>
	<li>2.12.8　putsメソッド，printメソッド，pメソッド，ppメソッド</li></ul></li>
<li>2.13　この章のまとめ</li>

</ul>
<h3>第3章　テストを自動化する</h3>
<ul class="toc">
<li>3.1　イントロダクション<ul class="toc">
	<li>3.1.1　この章で学ぶこと</li>
	<li>3.1.2　「プログラマの三大美徳」</li></ul></li>
<li>3.2　Minitestの基本<ul class="toc">
	<li>3.2.1　テストコードのひな形</li>
	<li>3.2.2　本書で使用するMinitestの検証メソッド</li>
	<li>3.2.3　テストコードの実行と結果の確認</li>
	<li>3.2.4　テストが失敗した場合の実行結果</li>
	<li>3.2.5　実行中にエラーが発生した場合の実行結果</li></ul></li>
<li>3.3　FizzBuzzプログラムのテスト自動化<ul class="toc">
	<li>3.3.1　putsメソッドをテストコードに置き換える</li>
	<li>3.3.2　プログラム本体とテストコードを分離する</li></ul></li>
<li>3.4　この章のまとめ</li>

</ul>
<h3>第4章　配列や繰り返し処理を理解する</h3>
<ul class="toc">
<li>4.1　イントロダクション<ul class="toc">
	<li>4.1.1　この章の例題：RGBカラー変換プログラム</li>
	<li>4.1.2　RGBカラー変換プログラムの実行例</li>
	<li>4.1.3　この章で学ぶこと</li></ul></li>
<li>4.2　配列<ul class="toc">
	<li>4.2.1　要素の変更，追加，削除</li>
	<li>4.2.2　配列を使った多重代入</li></ul></li>
<li>4.3　ブロック<ul class="toc">
	<li>4.3.1　参考：JavaScriptの繰り返し処理</li>
	<li>4.3.2　Rubyの繰り返し処理</li>
	<li>4.3.3　配列の要素を削除する条件を自由に指定する</li>
	<li>4.3.4　ブロックパラメータとブロック内の変数</li>
	<li>4.3.5　do ... end と {}</li></ul></li>
<li>4.4　ブロックを使う配列のメソッド<ul class="toc">
	<li>4.4.1　map/collect</li>
	<li>4.4.2　select/find_all/reject</li>
	<li>4.4.3　find/detect</li>
	<li>4.4.4　sum</li>
	<li>4.4.5　&とシンボルを使ってもっと簡潔に書く</li></ul></li>
<li>4.5　範囲（Range）<ul class="toc">
	<li>4.5.1　配列や文字列の一部を抜き出す</li>
	<li>4.5.2　n以上m以下，n以上m未満の判定をする</li>
	<li>4.5.3　case文で使う</li>
	<li>4.5.4　値が連続する配列を作成する</li>
	<li>4.5.5　繰り返し処理を行う</li></ul></li>
<li>4.6　例題：RGB変換プログラムを作成する<ul class="toc">
	<li>4.6.1　to_hexメソッドを作成する</li>
	<li>4.6.2　to_hexメソッドをリファクタリングする</li>
	<li>4.6.3　to_intsメソッドを作成する</li>
	<li>4.6.4　to_intsメソッドをリファクタリングする</li>
	<li>4.6.5　to_intsメソッドをリファクタリングする（上級編）</li></ul></li>
<li>4.7　配列についてもっと詳しく<ul class="toc">
	<li>4.7.1　さまざまな要素の取得方法</li>
	<li>4.7.2　さまざまな要素の変更方法</li>
	<li>4.7.3　配列の連結</li>
	<li>4.7.4　配列の和集合，差集合，積集合</li>
	<li>4.7.5　多重代入で残りの全要素を配列として受け取る，または無視する</li>
	<li>4.7.6　1つの配列を複数の引数やwhen節の条件として展開する</li>
	<li>4.7.7　メソッドの可変長引数</li>
	<li>4.7.8　*で配列同士を非破壊的に連結する</li>
	<li>4.7.9　==で等しい配列かどうか判断する</li>
	<li>4.7.10　%記法で文字列の配列を簡潔に作る</li>
	<li>4.7.11　文字列を配列に変換する</li>
	<li>4.7.12　配列にデフォルト値を設定する</li>
	<li>4.7.13　配列にデフォルト値を設定する場合の注意点</li>
	<li>4.7.14　ミュータブル？　イミュータブル？</li></ul></li>
<li>4.8　ブロックについてもっと詳しく<ul class="toc">
	<li>4.8.1　添え字付きの繰り返し処理</li>
	<li>4.8.2　with_indexメソッドを使った添え字付きの繰り返し処理</li>
	<li>4.8.3　添え字を0以外の数値から開始させる</li>
	<li>4.8.4　配列がブロックパラメータに渡される場合</li>
	<li>4.8.5　番号指定パラメータ</li>
	<li>4.8.6　ブロックローカル変数</li>
	<li>4.8.7　繰り返し処理以外でも使用されるブロック</li>
	<li>4.8.8　do...endと{}の結合度の違い</li>
	<li>4.8.9　ブロックを使うメソッドを定義する</li></ul></li>
<li>4.9　範囲（Range）についてもっと詳しく<ul class="toc">
	<li>4.9.1　終端や始端を持たない範囲オブジェクト</li></ul></li>
<li>4.10　さまざまな繰り返し処理<ul class="toc">
	<li>4.10.1　timesメソッド</li>
	<li>4.10.2　uptoメソッドとdowntoメソッド</li>
	<li>4.10.3　stepメソッド</li>
	<li>4.10.4　while文とuntil文</li>
	<li>4.10.5　for文</li>
	<li>4.10.6　loopメソッド</li>
	<li>4.10.7　再帰呼び出し</li></ul></li>
<li>4.11　繰り返し処理用の制御構造<ul class="toc">
	<li>4.11.1　break</li>
	<li>4.11.2　throwとcatchを使った大域脱出</li>
	<li>4.11.3　繰り返し処理で使うbreakとreturnの違い</li>
	<li>4.11.4　next</li>
	<li>4.11.5　redo</li></ul></li>
<li>4.12　この章のまとめ</li>

</ul>
<h3>第5章　ハッシュやシンボルを理解する</h3>
<ul class="toc">
<li>5.1　イントロダクション<ul class="toc">
	<li>5.1.1　この章の例題：長さの単位変換プログラム</li>
	<li>5.1.2　長さの単位変換プログラムの実行例</li>
	<li>5.1.3　この章で学ぶこと</li></ul></li>
<li>5.2　ハッシュ<ul class="toc">
	<li>5.2.1　要素の追加，変更，取得</li>
	<li>5.2.2　ハッシュを使った繰り返し処理</li>
	<li>5.2.3　ハッシュの同値比較，要素数の取得，要素の削除</li></ul></li>
<li>5.3　シンボル<ul class="toc">
	<li>5.3.1　シンボルと文字列の違い</li>
	<li>5.3.2　シンボルの特徴とおもな用途</li></ul></li>
<li>5.4　続・ハッシュについて<ul class="toc">
	<li>5.4.1　ハッシュのキーにシンボルを使う</li>
	<li>5.4.2　キーや値に異なるデータ型を混在させる</li>
	<li>5.4.3　メソッドのキーワード引数とハッシュ</li></ul></li>
<li>5.5　例題：長さの単位変換プログラムを作成する<ul class="toc">
	<li>5.5.1　テストコードを準備する</li>
	<li>5.5.2　いろんな単位を変換できるようにする</li>
	<li>5.5.3　convert_lengthメソッドを改善する</li></ul></li>
<li>5.6　ハッシュとキーワード引数についてもっと詳しく<ul class="toc">
	<li>5.6.1　ハッシュで使用頻度の高いメソッド</li>
	<li>5.6.2　**でハッシュを展開させる</li>
	<li>5.6.3　ハッシュを使った擬似キーワード引数</li>
	<li>5.6.4　任意のキーワードを受け付ける**引数</li>
	<li>5.6.5　ハッシュを明示的にキーワード引数に変換する**</li>
	<li>5.6.6　メソッド呼び出し時の{}の省略</li>
	<li>5.6.7　ハッシュリテラルの{}とブロックの{}</li>
	<li>5.6.8　ハッシュから配列へ，配列からハッシュへ</li>
	<li>5.6.9　ハッシュのデフォルト値を理解する</li>
	<li>5.6.10　その他，キーワード引数に関する高度な話題</li></ul></li>
<li>5.7　シンボルについてもっと詳しく<ul class="toc">
	<li>5.7.1　シンボルを作成するさまざまな方法</li>
	<li>5.7.2　%記法でシンボルやシンボルの配列を作成する</li>
	<li>5.7.3　シンボルと文字列の関係</li></ul></li>
<li>5.8　この章のまとめ</li>

</ul>
<h3>第6章　正規表現を理解する</h3>
<ul class="toc">
<li>6.1　イントロダクション<ul class="toc">
	<li>6.1.1　この章の例題：ハッシュ記法変換プログラム</li>
	<li>6.1.2　ハッシュ記法変換プログラムの実行例</li>
	<li>6.1.3　この章で学ぶこと</li></ul></li>
<li>6.2　正規表現って何？<ul class="toc">
	<li>6.2.1　正規表現の便利さを知る</li>
	<li>6.2.2　正規表現をゼロから学習するための参考資料</li></ul></li>
<li>6.3　Rubyにおける正規表現オブジェクト<ul class="toc">
	<li>6.3.1　Rubularで視覚的にマッチする文字列を確認する</li>
	<li>6.3.2　正規表現のキャプチャを利用する</li>
	<li>6.3.3　キャプチャに名前を付ける</li>
	<li>6.3.4　組み込み変数でマッチの結果を取得する</li>
	<li>6.3.5　正規表現と組み合わせると便利なStringクラスのメソッド</li></ul></li>
<li>6.4　例題：Rubyのハッシュ記法を変換する<ul class="toc">
	<li>6.4.1　テストコードを準備する</li>
	<li>6.4.2　ハッシュ記法変換プログラムを実装する</li></ul></li>
<li>6.5　正規表現オブジェクトについてもっと詳しく<ul class="toc">
	<li>6.5.1　正規表現オブジェクトを作成するさまざまな方法</li>
	<li>6.5.2　case文で正規表現を使う</li>
	<li>6.5.3　正規表現オブジェクト作成時のオプション</li>
	<li>6.5.4　Regexp.last_matchでマッチの結果を取得する</li>
	<li>6.5.5　組み込み変数を書き換えないmatch?メソッド</li></ul></li>
<li>6.6　この章のまとめ</li>

</ul>
<h3>第7章　クラスの作成を理解する</h3>
<ul class="toc">
<li>7.1　イントロダクション<ul class="toc">
	<li>7.1.1　この章の例題：改札機プログラム</li>
	<li>7.1.2　この章で学ぶこと</li></ul></li>
<li>7.2　オブジェクト指向プログラミングの基礎知識<ul class="toc">
	<li>7.2.1　クラスを使う場合と使わない場合の比較</li>
	<li>7.2.2　オブジェクト指向プログラミング関連の用語</li></ul></li>
<li>7.3　クラスの定義<ul class="toc">
	<li>7.3.1　オブジェクトの作成とinitializeメソッド</li>
	<li>7.3.2　インスタンスメソッドの定義</li>
	<li>7.3.3　インスタンス変数とアクセサメソッド</li>
	<li>7.3.4　クラスメソッドの定義</li>
	<li>7.3.5　定数</li></ul></li>
<li>7.4　例題：改札機プログラムの作成<ul class="toc">
	<li>7.4.1　テストコードを準備する</li>
	<li>7.4.2　必要なメソッドやクラスを仮実装する</li>
	<li>7.4.3　運賃が足りているかどうかを判別する</li>
	<li>7.4.4　テストコードのリファクタリング</li>
	<li>7.4.5　残りのテストケースをテストする</li></ul></li>
<li>7.5　selfキーワード<ul class="toc">
	<li>7.5.1　selfの付け忘れで不具合が発生するケース</li>
	<li>7.5.2　クラスメソッドの内部やクラス構文直下のself</li>
	<li>7.5.3　クラスメソッドをインスタンスメソッドで呼び出す</li></ul></li>
<li>7.6　クラスの継承<ul class="toc">
	<li>7.6.1　標準ライブラリの継承関係</li>
	<li>7.6.2　デフォルトで継承されるObjectクラス</li>
	<li>7.6.3　オブジェクトのクラスを確認する</li>
	<li>7.6.4　ほかのクラスを継承したクラスを作る</li>
	<li>7.6.5　superでスーパークラスのメソッドを呼び出す</li>
	<li>7.6.6　メソッドのオーバーライド</li>
	<li>7.6.7　クラスメソッドの継承</li></ul></li>
<li>7.7　メソッドの可視性<ul class="toc">
	<li>7.7.1　publicメソッド</li>
	<li>7.7.2　privateメソッド</li>
	<li>7.7.3　privateメソッドから先に定義する場合</li>
	<li>7.7.4　privateメソッドはサブクラスでも呼び出せる</li>
	<li>7.7.5　クラスメソッドをprivateにしたい場合</li>
	<li>7.7.6　メソッドの可視性を変える方法あれこれ</li>
	<li>7.7.7　protectedメソッド</li></ul></li>
<li>7.8　定数についてもっと詳しく<ul class="toc">
	<li>7.8.1　定数と再代入</li>
	<li>7.8.2　定数はミュータブルなオブジェクトに注意する</li></ul></li>
<li>7.9　さまざまな種類の変数<ul class="toc">
	<li>7.9.1　クラスインスタンス変数</li>
	<li>7.9.2　クラス変数</li>
	<li>7.9.3　グローバル変数と組み込み変数</li></ul></li>
<li>7.10　クラス定義やRubyの言語仕様に関する高度な話題<ul class="toc">
	<li>7.10.1　エイリアスメソッドの定義</li>
	<li>7.10.2　メソッドの削除</li>
	<li>7.10.3　入れ子になったクラスの定義</li>
	<li>7.10.4　演算子の挙動を独自に再定義する</li>
	<li>7.10.5　等値を判断するメソッドや演算子を理解する</li>
	<li>7.10.6　オープンクラスとモンキーパッチ</li>
	<li>7.10.7　特異メソッド</li>
	<li>7.10.8　クラスメソッドは特異メソッドの一種</li>
	<li>7.10.9　ダックタイピング</li></ul></li>
<li>7.11　この章のまとめ</li>

</ul>
<h3>第8章　モジュールを理解する</h3>
<ul class="toc">
<li>8.1　イントロダクション<ul class="toc">
	<li>8.1.1　この章の例題：rainbowメソッド</li>
	<li>8.1.2　この章で学ぶこと</li></ul></li>
<li>8.2　モジュールの概要<ul class="toc">
	<li>8.2.1　モジュールの用途</li>
	<li>8.2.2　モジュールの定義</li></ul></li>
<li>8.3　モジュールを利用したメソッド定義（includeとextend）<ul class="toc">
	<li>8.3.1　モジュールをクラスにincludeする</li>
	<li>8.3.2　include先のメソッドを使うモジュール</li>
	<li>8.3.3　モジュールをextendする</li></ul></li>
<li>8.4　例題：rainbowメソッドの作成<ul class="toc">
	<li>8.4.1　実装の方針を検討する</li>
	<li>8.4.2　テストコードを準備する</li>
	<li>8.4.3　rainbowメソッドを実装する</li>
	<li>8.4.4　rainbowメソッドのリファクタリング</li>
	<li>8.4.5　あらゆるオブジェクトでrainbowメソッドを使えるようにする</li></ul></li>
<li>8.5　モジュールを利用したメソッド定義についてもっと詳しく<ul class="toc">
	<li>8.5.1　includeされたモジュールの有無を確認する</li>
	<li>8.5.2　Enumerableモジュール</li>
	<li>8.5.3　Comparableモジュールと<=>演算子</li>
	<li>8.5.4　Kernelモジュール</li>
	<li>8.5.5　トップレベルはmainという名前のObject</li>
	<li>8.5.6　クラスやモジュール自身もオブジェクト</li>
	<li>8.5.7　モジュールとインスタンス変数</li>
	<li>8.5.8　クラス以外のオブジェクトにextendする</li></ul></li>
<li>8.6　モジュールを利用した名前空間の作成<ul class="toc">
	<li>8.6.1　名前空間を分けて名前の衝突を防ぐ</li>
	<li>8.6.2　名前空間でグループやカテゴリを分ける</li>
	<li>8.6.3　入れ子なしで名前空間付きのクラスを定義する</li>
	<li>8.6.4　トップレベルの同名クラスを参照する</li>
	<li>8.6.5　入れ子の有無によって参照されるクラスが異なるケース</li></ul></li>
<li>8.7　関数や定数を提供するモジュールの作成<ul class="toc">
	<li>8.7.1　モジュールに特異メソッドを定義する</li>
	<li>8.7.2　module_functionメソッド</li>
	<li>8.7.3　モジュールに定数を定義する</li>
	<li>8.7.4　モジュール関数や定数を持つモジュールの例</li></ul></li>
<li>8.8　状態を保持するモジュールの作成</li>
<li>8.9　モジュールに関する高度な話題<ul class="toc">
	<li>8.9.1　メソッド探索のルールを理解する</li>
	<li>8.9.2　モジュールにほかのモジュールをincludeする</li>
	<li>8.9.3　prependでモジュールをミックスインする</li>
	<li>8.9.4　prependで既存メソッドを置き換える</li>
	<li>8.9.5　有効範囲を限定できるrefinements</li></ul></li>
<li>8.10　この章のまとめ</li>

</ul>
<h3>第9章　例外処理を理解する</h3>
<ul class="toc">
<li>9.1　イントロダクション<ul class="toc">
	<li>9.1.1　この章の例題：正規表現チェッカープログラム</li>
	<li>9.1.2　正規表現チェッカーの実行例</li>
	<li>9.1.3　この章で学ぶこと</li></ul></li>
<li>9.2　例外の捕捉<ul class="toc">
	<li>9.2.1　発生した例外を捕捉しない場合</li>
	<li>9.2.2　例外を捕捉して処理を続行する場合</li>
	<li>9.2.3　例外処理の流れ</li>
	<li>9.2.4　例外オブジェクトから情報を取得する</li>
	<li>9.2.5　クラスを指定して捕捉する例外を限定する</li>
	<li>9.2.6　例外クラスの継承関係を理解する</li>
	<li>9.2.7　継承関係とrescue節の順番に注意する</li>
	<li>9.2.8　例外発生時にもう一度処理をやりなおすretry</li></ul></li>
<li>9.3　意図的に例外を発生させる</li>
<li>9.4　例外処理のベストプラクティス<ul class="toc">
	<li>9.4.1　安易にrescueを使わない</li>
	<li>9.4.2　rescueしたら情報を残す</li>
	<li>9.4.3　例外処理の対象範囲と対象クラスを極力絞り込む</li>
	<li>9.4.4　例外処理よりも条件分岐を使う</li>
	<li>9.4.5　予期しない条件は異常終了させる</li>
	<li>9.4.6　例外処理も手を抜かずにテストする</li></ul></li>
<li>9.5　例題：正規表現チェッカープログラムの作成<ul class="toc">
	<li>9.5.1　テスト駆動開発をするかどうか</li>
	<li>9.5.2　実装のフローチャートを考える</li>
	<li>9.5.3　文字入力を受け付けるgetsメソッド</li>
	<li>9.5.4　実装を開始する</li>
	<li>9.5.5　例外処理を組み込む</li></ul></li>
<li>9.6　例外処理についてもっと詳しく<ul class="toc">
	<li>9.6.1　ensure</li>
	<li>9.6.2　ensureの代わりにブロックを使う</li>
	<li>9.6.3　例外処理のelse</li>
	<li>9.6.4　例外処理と戻り値</li>
	<li>9.6.5　begin/endを省略するrescue修飾子</li>
	<li>9.6.6　$!と$@に格納される例外情報</li>
	<li>9.6.7　例外処理のbegin/endを省略できるケース</li>
	<li>9.6.8　rescueした例外を再度発生させる</li>
	<li>9.6.9　独自の例外クラスを定義する</li></ul></li>
<li>9.7　この章のまとめ</li>

</ul>
<h3>第10章　yieldとProcを理解する</h3>
<ul class="toc">
<li>10.1　イントロダクション<ul class="toc">
	<li>10.1.1　この章の例題：ワードシンセサイザー</li>
	<li>10.1.2　この章で学ぶこと</li></ul></li>
<li>10.2　ブロックを利用するメソッドの定義とyield<ul class="toc">
	<li>10.2.1　yieldを使ってブロックの処理を呼び出す</li>
	<li>10.2.2　ブロックを引数として明示的に受け取る</li></ul></li>
<li>10.3　Procオブジェクト<ul class="toc">
	<li>10.3.1　Procオブジェクトの基礎</li>
	<li>10.3.2　Procオブジェクトをブロックの代わりに渡す</li>
	<li>10.3.3　Procオブジェクトを普通の引数として渡す</li>
	<li>10.3.4　Proc.newとラムダの違い</li>
	<li>10.3.5　Proc.newかラムダかを判断するlambda?メソッド</li></ul></li>
<li>10.4　例題：ワードシンセサイザーの作成<ul class="toc">
	<li>10.4.1　エフェクトの実装方法を検討する</li>
	<li>10.4.2　テストコードも2つに分ける</li>
	<li>10.4.3　テストコードを準備する</li>
	<li>10.4.4　リバースエフェクトを実装する</li>
	<li>10.4.5　エコーエフェクトを実装する</li>
	<li>10.4.6　ラウドエフェクトを実装する</li>
	<li>10.4.7　WordSynthクラスの実装とテスト</li></ul></li>
<li>10.5　Procオブジェクトについてもっと詳しく<ul class="toc">
	<li>10.5.1　Procオブジェクトを実行するさまざまな方法</li>
	<li>10.5.2　&とto_procメソッド</li>
	<li>10.5.3　Procオブジェクトとクロージャ</li></ul></li>
<li>10.6　この章のまとめ</li>

</ul>
<h3>第11章　パターンマッチを理解する</h3>
<ul class="toc">
<li>11.1　イントロダクション<ul class="toc">
	<li>11.1.1　この章の例題：ログフォーマッタープログラム</li>
	<li>11.1.2　この章で学ぶこと</li></ul></li>
<li>11.2　パターンマッチの基本<ul class="toc">
	<li>11.2.1　ハッシュをパターンマッチさせる</li></ul></li>
<li>11.3　パターンマッチの利用パターン<ul class="toc">
	<li>11.3.1　valueパターン</li>
	<li>11.3.2　variableパターン</li>
	<li>11.3.3　arrayパターン</li>
	<li>11.3.4　hashパターン</li>
	<li>11.3.5　asパターン</li>
	<li>11.3.6　alternativeパターン</li>
	<li>11.3.7　findパターン</li></ul></li>
<li>11.4　例題：ログフォーマッターの作成<ul class="toc">
	<li>11.4.1　入力データの取得</li>
	<li>11.4.2　“OK”のログに対応する</li>
	<li>11.4.3　404エラーのログに対応する</li>
	<li>11.4.4　“WARN”のログに対応する</li>
	<li>11.4.5　500エラーのログに対応する</li>
	<li>11.4.6　参考：パターンマッチを使わない場合</li></ul></li>
<li>11.5　パターンマッチについてもっと詳しく<ul class="toc">
	<li>11.5.1　ガード式</li>
	<li>11.5.2　1行パターンマッチ</li>
	<li>11.5.3　変数のスコープに関する注意点</li>
	<li>11.5.4　自作クラスをパターンマッチに対応させる</li></ul></li>
<li>11.6　この章のまとめ</li>

</ul>
<h3>第12章　Rubyのデバッグ技法を身につける</h3>
<ul class="toc">
<li>12.1　イントロダクション<ul class="toc">
	<li>12.1.1　この章で学ぶこと</li></ul></li>
<li>12.2　バックトレースの読み方<ul class="toc">
	<li>12.2.1　実行環境によって変化するバックトレースの表示形式</li></ul></li>
<li>12.3　よく発生する例外クラスとその原因<ul class="toc">
	<li>12.3.1　NameError</li>
	<li>12.3.2　NoMethodError</li>
	<li>12.3.3　TypeError</li>
	<li>12.3.4　ArgumentError</li>
	<li>12.3.5　ZeroDivisionError</li>
	<li>12.3.6　SystemStackError</li>
	<li>12.3.7　LoadError</li>
	<li>12.3.8　SyntaxError（syntax error）</li>
	<li>12.3.9　組み込みライブラリに定義されている上記以外の例外クラス</li>
	<li>12.3.10　Rubyの標準ライブラリに含まれない例外クラス</li></ul></li>
<li>12.4　プログラムの途中経過を確認する<ul class="toc">
	<li>12.4.1　printデバッグ</li>
	<li>12.4.2　tapメソッドでメソッドチェーンをデバッグする</li>
	<li>12.4.3　ログにデバッグ情報を出力する</li>
	<li>12.4.4　デバッガ（debug.gem）を使う</li></ul></li>
<li>12.5　汎用的なトラブルシューティング方法<ul class="toc">
	<li>12.5.1　irb上で簡単なコードを動かしてみる</li>
	<li>12.5.2　ログを調べる</li>
	<li>12.5.3　公式ドキュメントや公式リファレンスを読む</li>
	<li>12.5.4　issueを検索する</li>
	<li>12.5.5　ライブラリのコードを読む</li>
	<li>12.5.6　テストコードを書く</li>
	<li>12.5.7　“警戒しながら”ネットの情報を参考にする</li>
	<li>12.5.8　パソコンの前から離れる</li>
	<li>12.5.9　誰かに聞く</li></ul></li>
<li>12.6　この章のまとめ</li>

</ul>
<h3>第13章　Rubyに関するその他のトピック</h3>
<ul class="toc">
<li>13.1　イントロダクション<ul class="toc">
	<li>13.1.1　この章で学ぶこと</li></ul></li>
<li>13.2　日付や時刻の扱い</li>
<li>13.3　ファイルやディレクトリの扱い</li>
<li>13.4　特定の形式のファイルを読み書きする<ul class="toc">
	<li>13.4.1　CSV</li>
	<li>13.4.2　JSON</li>
	<li>13.4.3　YAML</li></ul></li>
<li>13.5　環境変数や起動時引数の取得<ul class="toc">
	<li>13.5.1　組み込み定数</li></ul></li>
<li>13.6　非推奨機能を使ったときに警告を出力する</li>
<li>13.7　eval，バッククオートリテラル，sendメソッド</li>
<li>13.8　Rake<ul class="toc">
	<li>13.8.1　Rakeの基本的な使い方</li>
	<li>13.8.2　Rakeを使ったテストの一括実行</li></ul></li>
<li>13.9　gemとBundler<ul class="toc">
	<li>13.9.1　gemのインストールと利用方法</li>
	<li>13.9.2　Bundlerでプロジェクト内で使用するgemを一括管理する</li>
	<li>13.9.3　Gemfile.lockの役割</li>
	<li>13.9.4　Gemfileでgemのバージョンを指定する記号の意味</li></ul></li>
<li>13.10　Rubyにおける型情報の定義と型検査（RBS，TypeProf，Steep）<ul class="toc">
	<li>13.10.1　typeprofコマンドで型情報を自動生成する</li>
	<li>13.10.2　Steepで型検査を行う</li>
	<li>13.10.3　RBSとRubyの未来</li></ul></li>
<li>13.11　「Railsの中のRuby」と「素のRuby」の違い<ul class="toc">
	<li>13.11.1　requireやrequire_relativeを書く機会がほとんどない</li>
	<li>13.11.2　名前空間として使われるモジュールが自動生成される</li>
	<li>13.11.3　標準ライブラリのクラスやMinitestが独自に拡張されている</li>
	<li>13.11.4　Rubyの構文や言語機能がまったく別の用途で使われているケースがある</li></ul></li>
<li>13.12　この章のまとめ</li>
</ul>
    </section>
    <section id="support">
      <h2>サポート</h2>
<h3 id="errata">正誤表</h3>
<p>本書の以下の部分に誤りがありました。ここに訂正するとともに，<wbr/>ご迷惑をおかけしたことを深くお詫び申し上げます。</p>
<div align="right"><p>（2021年12月23日最終更新）</p></div>
<!--
※古い更新分はこの下に，<wbr/>追加分は上にもっていくようにする
<div class="partition-block"><p>（以下2021年12月23日更新）</p></div>
-->

<h4>P.148，<wbr/>1つめのサンプルコード</h4>
<table class="errataTable" cellspacing="0"><tbody><tr><th>誤</th><td><div class="preWrap"><pre><code>dimenstions = [
  [10, 20],
  [30, 40],
  [50, 60],
]
# dimenstions.each { |dimenstion| p dimenstion } と書いたのと同じ
dimenstions.each { p _1 }
#=> [10, 20]
#   [30, 40]
#   [50, 60]
</code></pre></div></td></tr><tr><th>正</th><td><div class="preWrap"><pre><code><strong>dimensions </strong>= [
  [10, 20],
  [30, 40],
  [50, 60],
]
# <strong>dimensions</strong>.each { |<strong>dimension</strong>| p <strong>dimension</strong> } と書いたのと同じ
<strong>dimensions</strong>.each { p _1 }
#=> [10, 20]
#   [30, 40]
#   [50, 60]
</code></pre></div></td></tr></tbody></table>


<h4>P.148，<wbr/>2つめのサンプルコード</h4>
<table class="errataTable" cellspacing="0"><tbody><tr><th>誤</th><td><div class="preWrap"><pre><code># dimenstions.each { |length, width| puts "#{length} / #{width}" } と書いたのと同じ
dimenstions.each { puts "#{_1} / #{_2}" }
#=> 10 / 20
#   30 / 40
#   50 / 60
</code></pre></div></td></tr><tr><th>正</th><td><div class="preWrap"><pre><code># <strong>dimensions</strong>.each { |length, width| puts "#{length} / #{width}" } と書いたのと同じ
<strong>dimensions</strong>.each { puts "#{_1} / #{_2}" }
#=> 10 / 20
#   30 / 40
#   50 / 60
</code></pre></div></td></tr></tbody></table>


<h4>P.432，<wbr/>2つめのサンプルコード</h4>
<table class="errataTable" cellspacing="0"><tbody><tr><th>誤</th><td><div class="preWrap"><pre><code>split_proc #=> #&lt;Proc:0x0000000312f9a0(&:split)>
</code></pre></div></td></tr><tr><th>正</th><td><div class="preWrap"><pre><code>split_proc #=> #&lt;Proc:0x0000000312f9a0(&:split) <strong>(lambda)</strong>>
</code></pre></div></td></tr></tbody></table>


<div class="partition-block"><p>（以下2021年12月14日更新）</p></div>
<h4>P.386，<wbr/>9.4.6項の最後の文</h4>
<table class="errataTable" cellspacing="0"><tbody><tr><th>誤</th><td>
ほかの章と同じく、例題の解説が終わったら再び例題処理に関する応用的なトピックを説明していきます。
</td></tr><tr><th>正</th><td>
ほかの章と同じく、例題の解説が終わったら再び例<strong>外</strong>処理に関する応用的なトピックを説明していきます。
</td></tr></tbody></table>








<div class="partition-block"><p>（以下2021年12月8日更新）</p></div>
<h4>P.124　一番下のサンプルコード</h4>
<table class="errataTable" cellspacing="0"><tbody>
<tr><th>誤</th>
<td><div class="preWrap"><pre><code>def to_hex(r, g, b)
  [r, g, b].inject('#') do |hex, n|
    hex + n.to_s(16).rjust(2, '0')
  end
end</code></pre></div></td>
</tr><tr><th>正</th>
<td><div class="preWrap"><pre><code>def to_hex(r, g, b)
  <strong>[r, g, b].sum('#') do |n|
    n.to_s(16).rjust(2, '0')</strong>
  end
end
</code></pre></div></td>
</tr></tbody></table>


    </section>
  </div>
  </div>
<script defer="defer">try{twttr.widgets.load();FB.XFBML.parse();Hatena.Bookmark.BookmarkButton.setup();}catch(e){}</script>
</div>    <div id="bookList">
      <h2>商品一覧</h2>
      <div id="topNavigation">
        <div id="filter">
          <form id="search" action="/dp" method="get">
            <input type="search" name="query" id="searchText" title="検索する商品のキーワードを入力" placeholder="商品のキーワード" required="required" value=""/>
            <input type="submit" id="searchSubmit" value="検索" title="検索する"/>
          </form>
          <div id="select">
            <a href="" id="selectLabel" title="商品ジャンルを選択する"></a>
            <div id="selectMenu">
              <ul id="selectMenuBody"></ul>
            </div>
          </div>
        </div>
        <nav id="pagingTop">
        </nav>
      </div>
      <ul itemprop="isPartOf" itemscope="itemscope" itemtype="http://www.schema.org/CollectionPage" id="listBook" class="list-book">
      </ul>
      <nav id="pagingBottom">
      </nav>
    </div>
  </div>
  <footer id="footer" itemscope="itemscope" itemtype="http://www.schema.org/WPFooter">
    <div id="wait" class="hidden"></div>
    <nav id="navigation" itemscope="itemscope" itemtype="http://www.schema.org/SiteNavigationElement">
      <ul id="navigationLink">
        <li id="navLinkHome" class="current"><a itemprop="url" href="/dp" title="ストア" class="home">ストア</a></li>
        <li id="navLinkMyPage"><a itemprop="url" href="/dp/my-page" title="マイページ" class="mypage">マイページ</a></li>
        <li id="navLinkInfor"><a itemprop="url" href="/dp/information" title="お知らせ" class="information">お知らせ</a></li>
        <li id="navLinkHelp"><a itemprop="url" href="/dp/help" title="ヘルプ" class="help">ヘルプ</a></li>
      </ul>
    </nav>
    <nav id="function" itemscope="itemscope" itemtype="http://www.schema.org/WPSideBar">
      <div id="backgroundWrapper" style="display:block;opacity:0.4"></div>
      <div id="navInfor"></div>
    </nav>
    <div id="storeInformation">
      <ul id="footerLink">
        <li>Twitter: <a href="https://twitter.com/gihyoDP">@gihyoDP</a></li>
        <li><a href="/dp/help/about/site">このサイトについて</a></li>
        <li><a href="/dp/help/about/terms">利用規約</a></li>
        <li><a href="/dp/help/about/privacy">プライバシーポリシー</a></li>
        <li><a href="/dp/help/about/law">特定商取引法に基づく表示</a></li>
      </ul>
      <p id="storeCopyright"><small>Copyright © 2022 <span class="reserved">All Rights Reserved by</span> <a href="/book">Gijutsu-Hyoron Co., Ltd.</a></small></p>
    </div>
  </footer>
<script>var params={"url":"https:\/\/gihyo.jp\/dp\/ebook\/2021\/978-4-297-12438-0","path":"\/dp\/ebook\/2021\/978-4-297-12438-0","targetId":"978-4-297-12438-0","parent":"\/dp\/genre\/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%83%BB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA","overlay":true,"body":"    <div id=\"bookList\">\n      <h2>\u5546\u54c1\u4e00\u89a7<\/h2>\n      <div id=\"topNavigation\">\n        <div id=\"filter\">\n          <form id=\"search\" action=\"\/dp\" method=\"get\">\n            <input type=\"search\" name=\"query\" id=\"searchText\" title=\"\u691c\u7d22\u3059\u308b\u5546\u54c1\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u5165\u529b\" placeholder=\"\u5546\u54c1\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\" required=\"required\" value=\"\"\/>\n            <input type=\"submit\" id=\"searchSubmit\" value=\"\u691c\u7d22\" title=\"\u691c\u7d22\u3059\u308b\"\/>\n          <\/form>\n          <div id=\"select\">\n            <a href=\"\" id=\"selectLabel\" title=\"\u5546\u54c1\u30b8\u30e3\u30f3\u30eb\u3092\u9078\u629e\u3059\u308b\"><\/a>\n            <div id=\"selectMenu\">\n              <ul id=\"selectMenuBody\"><\/ul>\n            <\/div>\n          <\/div>\n        <\/div>\n        <nav id=\"pagingTop\">\n        <\/nav>\n      <\/div>\n      <ul itemprop=\"isPartOf\" itemscope=\"itemscope\" itemtype=\"http:\/\/www.schema.org\/CollectionPage\" id=\"listBook\" class=\"list-book\">\n      <\/ul>\n      <nav id=\"pagingBottom\">\n      <\/nav>\n    <\/div>","isLogin":false,"dialog":"<aside id=\"dialog\" class=\"dialog-login\" style=\"opacity:0\">\n  <div id=\"dialogBody\">\n    <div id=\"gihyoAccount\">\n      <h2>\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3067\u30ed\u30b0\u30a4\u30f3<\/h2>\n      <form action=\"?login\" method=\"post\">\n        <input type=\"hidden\" name=\"fid\" value=\"\"\/>\n        <dl>\n          <dt>\u30a2\u30ab\u30a6\u30f3\u30c8<\/dt>\n          <dd><input type=\"email\" name=\"account\" placeholder=\"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\" required=\"required\" title=\"\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\"\/><\/dd>\n          <dt>\u30d1\u30b9\u30ef\u30fc\u30c9<\/dt>\n          <dd><input type=\"password\" name=\"password\" placeholder=\"\u30d1\u30b9\u30ef\u30fc\u30c9\" required=\"required\" title=\"\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\"\/><\/dd>\n        <\/dl>\n        <p id=\"loginButton\"><input type=\"submit\" value=\"\u30ed\u30b0\u30a4\u30f3\" title=\"\u30ed\u30b0\u30a4\u30f3\u3059\u308b\"\/><\/p>\n        <ul id=\"loginFunction\">\n          <li><a href=\"\/dp\/help\/buy\/forgot\">\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u304a\u5fd8\u308c\u306e\u65b9<\/a><\/li>\n          <li><a href=\"\/dp\/help\/buy\/account\">\u65b0\u898f\u767b\u9332\u3092\u3054\u5e0c\u671b\u306e\u65b9<\/a><\/li>\n        <\/ul>\n      <\/form>\n    <\/div>\n    <div id=\"externalSite\">\n      <h2>\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u3067\u30ed\u30b0\u30a4\u30f3<\/h2>\n      <ul>\n      <li class=\"google\"><a href=\"https:\/\/gihyo.jp\/auth\/google\">Google<\/a><\/li>\n      <li class=\"facebook\"><a href=\"https:\/\/gihyo.jp\/auth\/facebook\">Facebook<\/a><\/li>\n      <li class=\"yahoo\"><a href=\"https:\/\/gihyo.jp\/auth\/yahoojp\">Yahoo! JAPAN<\/a><\/li>\n      <\/ul>\n      <p><a href=\"\/dp\/help\/buy\/external\">\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u3067\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066<\/a><\/p>\n    <\/div>\n    <p id=\"close\"><a href=\"#close\" title=\"\u9589\u3058\u308b\">\u9589\u3058\u308b<\/a><\/p>\n  <\/div>\n<\/aside>"}</script>
  <script>var asyncCall=function(){var e=Array.prototype.slice,a=Function.prototype.bind||function(j){var a=this,b=e.call(arguments,1);return function(){var c=e.call(arguments);return a.apply(j,b.concat(c))}},f=a.call(a,Function.prototype.call),b=f(e),c=f(a),d=f(Function.prototype.apply);if("undefined"!==typeof process)a=function(){var a=b(arguments);process.nextTick(d(c,null,a))};else if("function"===typeof setImmediate)a=function(){var a=b(arguments);setImmediate(d(c,null,a))};else if("function"===typeof MessageChannel){var g=new MessageChannel,h=[];g.port1.onmessage=function(){h.shift()()};a=function(){var a=b(arguments);h.push(d(c,null,a));g.port2.postMessage(0)}}else a=function(){var a=b(arguments);setTimeout(d(c,null,a),0)};return a}();window.onerror=function(mes,fname,lnum){var erIgnore=['top.GLOBALS','originalCreateNotification','canvas.contentDocument','fb_xd_fragment','Script error.'];for(i=0;i<erIgnore.length;i++){if(mes.indexOf(erIgnore[i])>-1){return false;}};var mes='message:'+mes+', file:'+fname+', line:'+lnum+', href:'+location.href+', UA:'+window.navigator.userAgent;gtag('event','JSError',{'evetn_category':'Error','event_label':mes});};</script>
  <script src="//platform.twitter.com/widgets.js" id="twitter-wjs" async defer></script>
  <script src="//connect.facebook.net/ja_JP/sdk.js#xfbml=1&appId=185201618169441&version=v2.8" id="facebook-jssdk" async defer></script>
  <script src="//apis.google.com/js/platform.js" async defer></script>
  <script src="//b.hatena.ne.jp/js/bookmark_button.js" charset="utf-8" async defer></script>
</body>
</html>